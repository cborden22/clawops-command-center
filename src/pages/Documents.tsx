import { useState } from "react"
import { format } from "date-fns"
import { CalendarIcon } from "lucide-react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"
import { Calendar } from "@/components/ui/calendar"
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover"
import { useToast } from "@/hooks/use-toast"
import { FileText, Download } from "lucide-react"
import { cn } from "@/lib/utils"
import html2pdf from "html2pdf.js"

interface FormData {
  [key: string]: string | Date | undefined
}

export default function Documents() {
  console.log('Documents: Component is rendering');
  const { toast } = useToast()
  const [formData, setFormData] = useState<FormData>({})
  const [paymentType, setPaymentType] = useState<"percentage" | "flat">("percentage")

  const locationAgreementFields = [
    "Agreement Date",
    "Provider Name", 
    "Provider Address",
    "Provider Contact Info",
    "Business Name",
    "Business Address", 
    "Business Contact Info",
    "Start Date",
    "End Date",
    "Payment Method",
    "Notice Period (Hours/Days)"
  ]

  const handleFormChange = (field: string, value: string | Date) => {
    setFormData(prev => ({ ...prev, [field]: value }))
  }

  const handleDownloadPDF = async () => {
    console.log('Starting PDF generation...', { formData })

    try {
      const filename = `${formData["Business Name"] || "Location"}_Agreement_${new Date().toISOString().split('T')[0]}.pdf`
      
      const currentDate = formData["Agreement Date"] instanceof Date 
        ? format(formData["Agreement Date"], "PPP")
        : formData["Agreement Date"] || new Date().toLocaleDateString()
      const paymentDetails = paymentType === "percentage" 
        ? `${formData["Revenue Share Percentage"] || "[%]"}% of all revenue generated by the Machine(s)`
        : `$${formData["Flat Fee Amount"] || "[Amount]"} per month (flat fee)`

      // Create simple HTML content without complex CSS
      const htmlContent = `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="UTF-8">
          <title>Claw Machine Placement Agreement</title>
          <style>
            body { 
              font-family: Arial, sans-serif; 
              margin: 20px;
              line-height: 1.6;
              color: #333;
            }
            .header { 
              text-align: center; 
              margin-bottom: 30px;
              padding-bottom: 20px;
              border-bottom: 2px solid #000;
            }
            .title { 
              font-size: 24px; 
              font-weight: bold; 
              margin-bottom: 10px;
            }
            .subtitle { 
              font-size: 16px; 
              margin-bottom: 15px;
            }
            .parties { 
              margin-bottom: 25px;
            }
            .party-section {
              margin-bottom: 20px;
            }
            .party-title {
              font-weight: bold;
              font-size: 14px;
              margin-bottom: 8px;
              text-decoration: underline;
            }
            .section { 
              margin-bottom: 20px;
              page-break-inside: avoid;
            }
            .section-title { 
              font-size: 16px; 
              font-weight: bold; 
              margin-bottom: 10px;
            }
            .section-content { 
              margin-bottom: 15px;
            }
            .compensation-box {
              background-color: #f5f5f5;
              padding: 15px;
              margin: 10px 0;
              border: 1px solid #ddd;
              text-align: center;
              font-weight: bold;
            }
            .responsibilities {
              display: table;
              width: 100%;
              margin: 15px 0;
            }
            .responsibility-column {
              display: table-cell;
              width: 50%;
              vertical-align: top;
              padding: 0 10px;
            }
            .responsibility-title {
              font-weight: bold;
              margin-bottom: 8px;
              text-decoration: underline;
            }
            ul {
              margin: 10px 0;
              padding-left: 20px;
            }
            li {
              margin-bottom: 5px;
            }
            .signatures { 
              margin-top: 40px;
              page-break-inside: avoid;
            }
            .signature-section {
              display: table;
              width: 100%;
              margin-top: 30px;
            }
            .signature-box {
              display: table-cell;
              width: 50%;
              text-align: center;
              padding: 20px;
            }
            .signature-line {
              border-bottom: 1px solid #000;
              width: 200px;
              height: 30px;
              margin: 20px auto;
            }
            .page-break {
              page-break-before: always;
            }
          </style>
        </head>
        <body>
          <div class="header">
            <div class="title">CLAW MACHINE PLACEMENT AGREEMENT</div>
            <div class="subtitle">Standard 1-Year Term</div>
            <div><strong>Effective Date: ${currentDate}</strong></div>
          </div>

          <div class="parties">
            <h3>PARTIES TO THIS AGREEMENT</h3>
            <div class="party-section">
              <div class="party-title">Claw Machine Provider</div>
              <div><strong>Name:</strong> ${formData["Provider Name"] || "[Provider Name]"}</div>
              <div><strong>Address:</strong> ${formData["Provider Address"] || "[Provider Address]"}</div>
              <div><strong>Contact:</strong> ${formData["Provider Contact Info"] || "[Contact Information]"}</div>
            </div>
            <div class="party-section">
              <div class="party-title">Business Location Owner</div>
              <div><strong>Name:</strong> ${formData["Business Name"] || "[Business Name]"}</div>
              <div><strong>Address:</strong> ${formData["Business Address"] || "[Business Address]"}</div>
              <div><strong>Contact:</strong> ${formData["Business Contact Info"] || "[Contact Information]"}</div>
            </div>
          </div>

          <div class="section">
            <div class="section-title">1. PURPOSE</div>
            <div class="section-content">
              The Provider agrees to place and operate one or more claw machines (the "Machine(s)") at the Location Owner's place of business. The Location Owner agrees to host the Machine(s) in exchange for compensation as outlined in Section 3.
            </div>
          </div>

          <div class="section">
            <div class="section-title">2. TERM</div>
            <div class="section-content">
              This Agreement is valid for <strong>12 months</strong>, beginning on <strong>${formData["Start Date"] instanceof Date ? format(formData["Start Date"], "PPP") : formData["Start Date"] || "[Start Date]"}</strong> and ending on <strong>${formData["End Date"] instanceof Date ? format(formData["End Date"], "PPP") : formData["End Date"] || "[End Date]"}</strong>, unless terminated earlier as outlined in Section 9.
            </div>
          </div>

          <div class="section">
            <div class="section-title">3. COMPENSATION</div>
            <div class="section-content">
              The Provider will collect all revenue from the Machine(s) and compensate the Location Owner with:
            </div>
            <div class="compensation-box">
              ${paymentDetails}
            </div>
            <div class="section-content">
              Payments will be made by the <strong>10th of each month</strong> for the prior month's earnings via <strong>${formData["Payment Method"] || "[Payment Method]"}</strong>.
            </div>
          </div>

          <div class="section">
            <div class="section-title">4. RESPONSIBILITIES</div>
            <div class="responsibilities">
              <div class="responsibility-column">
                <div class="responsibility-title">Provider Responsibilities</div>
                <ul>
                  <li>Owns all machines and their contents</li>
                  <li>Handles installation, restocking, and servicing</li>
                  <li>Covers all maintenance and repairs</li>
                  <li>Pays for electricity usage</li>
                  <li>Provides timely revenue reporting</li>
                </ul>
              </div>
              <div class="responsibility-column">
                <div class="responsibility-title">Location Owner Responsibilities</div>
                <ul>
                  <li>Provides accessible space for Machine(s)</li>
                  <li>Supplies power outlet near placement area</li>
                  <li>Maintains general cleanliness around machine</li>
                  <li>Ensures customer access during business hours</li>
                  <li>Cooperates with maintenance schedules</li>
                </ul>
              </div>
            </div>
          </div>

          <div class="section">
            <div class="section-title">5. THEFT, DAMAGE & COOPERATION</div>
            <div class="section-content">
              The Location Owner will not be held liable for theft, vandalism, or accidental damage to the Machine(s).
            </div>
            <div class="section-content">
              <strong>In the event of incidents, the Location Owner agrees to:</strong>
              <ul>
                <li>Provide available security footage, if applicable</li>
                <li>Allow access for inspection and assessment</li>
                <li>Cooperate with law enforcement or insurance representatives</li>
                <li>Notify Provider within 24 hours of any incidents</li>
              </ul>
            </div>
          </div>

          <div class="section">
            <div class="section-title">6. INSURANCE & LIABILITY</div>
            <div class="section-content">
              The Provider is responsible for carrying comprehensive insurance for equipment and general liability. The Location Owner assumes no liability for injuries or damages related to the Machine(s), except in cases of gross negligence.
            </div>
          </div>

          <div class="section">
            <div class="section-title">7. MARKETING & SIGNAGE</div>
            <div class="section-content">
              The Provider may display branding and promotional signage on or immediately near the Machine(s). Any additional signage in other areas of the premises must receive prior written approval from the Location Owner.
            </div>
          </div>

          <div class="section">
            <div class="section-title">8. RELOCATION OR REMOVAL</div>
            <div class="section-content">
              The Provider may replace, relocate, or remove the Machine(s) with <strong>${formData["Notice Period (Hours/Days)"] || "[Notice Period]"}</strong> notice to the Location Owner. The Location Owner may request relocation of the machine within the business premises if operationally necessary.
            </div>
          </div>

          <div class="section">
            <div class="section-title">9. TERMINATION</div>
            <div class="section-content">
              Either party may terminate this Agreement with <strong>30 days' written notice</strong>. Immediate termination is permitted in the event of material breach that remains uncured after 7 days' written notice.
            </div>
          </div>

          <div class="section">
            <div class="section-title">10. RENEWAL</div>
            <div class="section-content">
              If neither party provides written notice of termination at least 30 days before the end date, this Agreement automatically renews for another 12-month term under the same conditions.
            </div>
          </div>

          <div class="section">
            <div class="section-title">11. ENTIRE AGREEMENT</div>
            <div class="section-content">
              This document represents the complete agreement between the Parties. Any amendments must be in writing and signed by both Parties. This Agreement supersedes all prior negotiations, understandings, or agreements.
            </div>
          </div>

          <div class="signatures">
            <div class="section-title">SIGNATURES</div>
            <div class="signature-section">
              <div class="signature-box">
                <div><strong>Claw Machine Provider</strong></div>
                <div class="signature-line"></div>
                <div>Signature</div>
                <div>Date: _________________</div>
              </div>
              <div class="signature-box">
                <div><strong>Business Location Owner</strong></div>
                <div class="signature-line"></div>
                <div>Signature</div>
                <div>Date: _________________</div>
              </div>
            </div>
          </div>

          <div style="text-align: center; margin-top: 30px; font-size: 12px; color: #666;">
            Generated on ${new Date().toLocaleDateString()} by ClawOps Document Creator
          </div>
        </body>
        </html>
      `

      // Simplified PDF generation options
      const opt = {
        margin: 15,
        filename: filename,
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { 
          scale: 2,
          useCORS: true
        },
        jsPDF: { 
          unit: 'mm', 
          format: 'a4', 
          orientation: 'portrait'
        }
      }

      await html2pdf().from(htmlContent).set(opt).save()

      toast({
        title: "PDF Downloaded Successfully",
        description: "Your location agreement has been saved to your downloads folder.",
      })

    } catch (error) {
      console.error('PDF generation error:', error)
      toast({
        title: "PDF Generation Failed",
        description: "There was an error generating the PDF. Please try again.",
        variant: "destructive"
      })
    }
  }

  const handleClearForm = () => {
    setFormData({})
    setPaymentType("percentage")
  }

  return (
    <div className="space-y-8">
      {/* Hero Section */}
      <div className="relative">
        <div className="absolute inset-0 bg-gradient-to-r from-gold-500/10 to-gold-600/5 rounded-2xl blur-xl" />
        <div className="relative glass-card p-8 rounded-2xl">
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center gap-4">
              <div className="relative">
                <div className="p-3 bg-gradient-to-br from-gold-500 to-gold-600 rounded-xl shadow-lg">
                  <FileText className="h-8 w-8 text-primary-foreground" />
                </div>
                <div className="absolute -inset-1 bg-gradient-to-br from-gold-500 to-gold-600 rounded-xl opacity-20 blur animate-glow" />
              </div>
              <div>
                <h1 className="text-4xl font-bold bg-gradient-to-r from-gold-500 to-gold-600 bg-clip-text text-transparent">
                  Location Agreement Creator
                </h1>
                <p className="text-muted-foreground text-lg mt-2">
                  Create professional claw machine placement agreements
                </p>
              </div>
            </div>
            <Button 
              variant="outline"
              onClick={handleClearForm}
            >
              Clear Form
            </Button>
          </div>
          
          <div className="flex items-center gap-6 mt-6">
            <div className="flex items-center gap-2 text-sm text-muted-foreground">
              <FileText className="h-4 w-4 text-gold-500" />
              <span>Legal Documents</span>
            </div>
            <div className="flex items-center gap-2 text-sm text-muted-foreground">
              <Download className="h-4 w-4 text-gold-500" />
              <span>PDF Generation</span>
            </div>
            <div className="flex items-center gap-2 text-sm text-muted-foreground">
              <FileText className="h-4 w-4 text-gold-500" />
              <span>Professional Templates</span>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="glass-card rounded-2xl border-white/10 accent-glow">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <FileText className="h-5 w-5" />
            Claw Machine Placement Agreement
          </CardTitle>
          <CardDescription>
            Fill in the information below to generate your professional location agreement
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          {locationAgreementFields.map((field) => {
            const isDateField = field === "Agreement Date" || field === "Start Date" || field === "End Date";
            
            if (isDateField) {
              return (
                <div key={field} className="space-y-2">
                  <Label htmlFor={field.toLowerCase().replace(/\s+/g, '-')}>
                    {field}
                  </Label>
                  <Popover>
                    <PopoverTrigger asChild>
                      <Button
                        variant="outline"
                        className={cn(
                          "w-full justify-start text-left font-normal",
                          !formData[field] && "text-muted-foreground"
                        )}
                      >
                        <CalendarIcon className="mr-2 h-4 w-4" />
                        {formData[field] instanceof Date ? (
                          format(formData[field] as Date, "PPP")
                        ) : formData[field] ? (
                          formData[field]
                        ) : (
                          <span>Pick a date</span>
                        )}
                      </Button>
                    </PopoverTrigger>
                    <PopoverContent className="w-auto p-0" align="start">
                      <Calendar
                        mode="single"
                        selected={formData[field] instanceof Date ? formData[field] as Date : undefined}
                        onSelect={(date) => handleFormChange(field, date || "")}
                        initialFocus
                        className={cn("p-3 pointer-events-auto")}
                      />
                    </PopoverContent>
                  </Popover>
                </div>
              );
            }
            
            return (
              <div key={field} className="space-y-2">
                <Label htmlFor={field.toLowerCase().replace(/\s+/g, '-')}>
                  {field}
                </Label>
                <Input
                  id={field.toLowerCase().replace(/\s+/g, '-')}
                  placeholder={`Enter ${field.toLowerCase()}...`}
                  value={formData[field] as string || ""}
                  onChange={(e) => handleFormChange(field, e.target.value)}
                />
              </div>
            );
          })}

          {/* Payment Type Selection */}
          <div className="space-y-4 border-t pt-4">
            <Label className="text-base font-semibold">Payment Structure</Label>
            <RadioGroup 
              value={paymentType} 
              onValueChange={(value: "percentage" | "flat") => setPaymentType(value)}
              className="space-y-3"
            >
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="percentage" id="percentage" />
                <Label htmlFor="percentage" className="cursor-pointer">
                  Revenue Share Percentage
                </Label>
              </div>
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="flat" id="flat" />
                <Label htmlFor="flat" className="cursor-pointer">
                  Flat Monthly Fee
                </Label>
              </div>
            </RadioGroup>

            {/* Conditional Input Fields */}
            {paymentType === "percentage" ? (
              <div className="space-y-2">
                <Label htmlFor="revenue-share">Revenue Share Percentage (%)</Label>
                <Input
                  id="revenue-share"
                  type="number"
                  min="0"
                  max="100"
                  placeholder="e.g., 50"
                  value={formData["Revenue Share Percentage"] as string || ""}
                  onChange={(e) => handleFormChange("Revenue Share Percentage", e.target.value)}
                />
              </div>
            ) : (
              <div className="space-y-2">
                <Label htmlFor="flat-fee">Monthly Flat Fee ($)</Label>
                <Input
                  id="flat-fee"
                  type="number"
                  min="0"
                  placeholder="e.g., 500"
                  value={formData["Flat Fee Amount"] as string || ""}
                  onChange={(e) => handleFormChange("Flat Fee Amount", e.target.value)}
                />
              </div>
            )}
          </div>
          
          <div className="pt-4">
            <Button 
              className="bg-gradient-primary hover:bg-primary/90 w-full"
              onClick={handleDownloadPDF}
            >
              <Download className="h-4 w-4 mr-2" />
              Generate Location Agreement PDF
            </Button>
          </div>
        </CardContent>
      </div>
    </div>
  )
}
